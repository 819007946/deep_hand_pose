name: "HandPoseHM"
layer {
  name: "DataSrc"
  type: "HandData"
  top: "data"
  top: "label"
  top: "index"
  top: "heatmap"
  include {
    phase: TRAIN
  }
  data_param {
    source: "NYU_HANDS_TRAIN"
    batch_size: 64
  }
}
layer {
  name: "DataSrc"
  type: "HandData"
  top: "data"
  top: "label"
  top: "index"
  top: "heatmap"
  include {
    phase: TEST
  }
  data_param {
    source: "NYU_HANDS_TEST"
    batch_size: 64
  }
}

### Convolutional Stage

### Conv1

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 8
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
#      value: 50
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "reluA"
  type: "ReLU"
  bottom: "pool1"
  top: "pool1"
  relu_param
  {
    negative_slope: 0.05
  }  
}

### Conv2

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 8
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "reluB"
  type: "ReLU"
  bottom: "pool2"
  top: "pool2"
  relu_param
  {
    negative_slope: 0.05
  }  
}

### Conv3

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  convolution_param {
    num_output: 8
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
# layer {
#   name: "pool2"
#   type: "Pooling"
#   bottom: "conv2"
#   top: "pool2"
#   pooling_param {
#     pool: MAX
#     kernel_size: 2
#     stride: 2
#   }
# }
layer {
  name: "reluC"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
  relu_param
  {
    negative_slope: 0.05
  }  
}


### Fully Connected Stage

layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "conv3"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
    relu_param
  {
  #negative_slope: 0.05
  }
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "pred_hm"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "pred_hm"
  top: "pred_hm"
    relu_param
  {
  #negative_slope: 0.05
  }
}

#############################################
## Bottleneck

layer {
  name: "bottleneck"
  type: "InnerProduct"
  #bottom: "top_hm_coords"
  bottom: "pred_hm"
  top: "bottleneck"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 1
  }
  inner_product_param {
    num_output: 22
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.02
    }
    bias_filler {
      type: "constant"
    }
  }
}

#############################################
#### Top level keypoint prediction

layer {
 name: "keypoint"
 type: "PCA"
 bottom: "bottleneck"
 #bottom: "top_hm_coords"
 #bottom: "pred_hm"
 #bottom: "pred_hm"
  param {
    lr_mult: 0
  }
  param {
    lr_mult: 0
  }
 top: "keypoint_predictions"
  inner_product_param {
    num_output: 28
    weight_filler {
      #type: "xavier"
      type: "gaussian"
      std: 0.05
    }
    bias_filler {
      type: "constant"
      value: 0.5
    }
  } 
}

#############################################
## Normalize
#layer {
#      name: "unnorm"
#      type: "UnNormalization"
#      bottom: "normal_keypoint_predictions"
#      bottom: "label"
#      top: "keypoint_predictions"
#}

#############################################
## Top level nodes

# layer {
#       name: "hm2kp"
#       type: "HeatMap2Keypoint"
#       bottom: "pred_hm"
#       #bottom: "heatmap"
#       top: "argmaxes"

#       include {
#       	      phase: TEST
# 	      }
# }

layer {
      name: "ignore"
      type: "Silence"
      bottom: "index"
      bottom: "heatmap"
      #bottom: "top_hm_coords"
}

layer {
  name: "loss"
  #type: "SigmoidCrossEntropyLoss"
  type: "EuclideanLoss"
  bottom: "label"
  bottom: "keypoint_predictions"
  #bottom: "pred_hm"
  #bottom: "heatmap_flat"
  top: "loss"
  loss_weight: 1
}

layer {
  name: "Viz"
  type: "MVRegressionLoss"
  bottom: "data"
  bottom: "label"
  bottom: "keypoint_predictions"
  top: "accuracy"
  include {
    phase: TEST
  }
}
